<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yifushidai.mapper.SysUserEntityMapper">
  <resultMap id="BaseResultMap" type="com.yifushidai.entity.SysUserEntity">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, password, mobile, status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yifushidai.entity.SysUserEntity">
    insert into sys_user (user_id, username, password, 
      mobile, status, create_time
      )
    values (#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yifushidai.entity.SysUserEntity">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yifushidai.entity.SysUserEntity">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yifushidai.entity.SysUserEntity">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>


<!--  /*通过用户名密码查找*/-->
  <select id="queryByusernameAndPwd"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where username = #{username,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
  </select>

<!--批量删除-->
  <delete id="delete">
    delete from sys_user where user_id in
    <foreach item="userId" collection="array" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>

<!--  /*查询*/-->
  <select id="queryAllList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    <where>
      <if test="username != null and username.trim() != ''">
        username like concat('%',#{username},'%')
      </if>
    </where>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>
  <select id="queryAllTotal" parameterType="map" resultType="int">
    select count(*) from sys_user
    <where>
      <if test="username != null and username.trim() != ''">
        username like concat('%',#{username},'%')
      </if>
    </where>
  </select>

<!--  /*解禁*/-->
  <update id="markNormal" >
    update sys_user set status = 1
    where user_id in
    <foreach item="userId" collection="array" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </update>
<!--  /*禁用*/-->
  <update id="markDisable" >
    update sys_user set status = 0
    where user_id in
    <foreach item="userId" collection="array" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </update>

</mapper>